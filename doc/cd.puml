' PlantUML
@startuml cd

title An example of Continuous Deployment using GitDocumentDB
!define ICONURL https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v2.2.0
!includeurl ICONURL/common.puml
!includeurl ICONURL/devicons/github_badge.puml
!includeurl ICONURL/devicons/git.puml
!includeurl ICONURL/font-awesome-5/cogs.puml
!define SPRITESURL https://raw.githubusercontent.com/plantuml-stdlib/gilbarbara-plantuml-sprites/v1.0/sprites
!includeurl SPRITESURL/gatsby.puml
!includeurl SPRITESURL/netlify.puml
!includeurl SPRITESURL/electron.puml


node "<$electron> Electron App\n(Inventory Manager)" {
  database "GitDocumentDB" #f0f0ff;line:blue{
    DEV_GIT(localrepos, Local Git repository, database) #f0f0ff;line:blue;line.dashed;{
      collections "JSON files" as localjson #3030f0;text:white
    }
  }
}

DEV_GITHUB_BADGE(generatorrepos, Generator Git repository\n(sosuisen-my-inventory-gatsby), database) #f0fff0;line:green{
  DEV_GIT(submodule, git submodule, database) #fff0f0;line:red;line.dashed;{
    collections "JSON files" as repjson #3030f0;text:white
  }
  component "<$gatsby>Gatsby" {
    component "gatsby-source-filesystem" #line.dashed{
      component "gatsby-transformer-json"as transformer  #f0fff0;line:909090;line.dashed 
    }
  }
}

DEV_GITHUB_BADGE(sourcerepos, Source Git repository\n(sosuisen-my-inventory), database) #fff0f0;line:red{
  FA5_COGS(githubactions, GitHub actions, control) #ffffff
  collections "JSON files" as json #3030f0;text:white
}

node "<$netlify>Netlify" {
  FA5_COGS(githubapps, GitHub Apps, control)
  collections "Static website" as website
  githubapps -> website: generate
}

localrepos <-down-> sourcerepos : Synchronize\n (pull, resolve conflicts and push)

sourcerepos <-- submodule : "read\n(update --remote)"
submodule <-- transformer : "read"

githubactions --> githubapps : webhook
generatorrepos --> githubapps: hook
generatorrepos <-- githubapps: read

@enduml